@using SyncTool.WebUI.Model.Snapshots
@using ByteSizeLib;
@using SyncTool.FileSystem;
@model DirectoryModel

@{
    ViewData["Title"] = String.IsNullOrEmpty(Model.Directory.Path) ? "Root" : Model.Directory.Path;
}

<div class="row">
    <ol class="breadcrumb" >
        <li><a asp-controller="Groups" asp-action="">Groups</a></li>
        <li><a asp-controller="Groups" asp-action="" asp-route-groupName="@Model.GroupName">@Model.GroupName</a></li>
        <li><a asp-controller="Folders" asp-action="" asp-route-groupName="@Model.GroupName">Folders</a></li>
        <li><a asp-controller="Folders"
               asp-action=""
               asp-route-groupName="@Model.GroupName" 
               asp-route-folderName="@Model.FolderName">@Model.FolderName</a></li>
        <li><a asp-controller="Snapshots"
               asp-action="Index"
               asp-route-groupName="@Model.GroupName" 
               asp-route-folderName="@Model.FolderName">Snapshots</a></li>
        <li><a asp-controller="Snapshots"
               asp-action="Details"
               asp-route-groupName="@Model.GroupName" 
               asp-route-folderName="@Model.FolderName"
               asp-route-id="@Model.SnapshotId">@Model.SnapshotId</a></li>
        <li class="active">Browse</li>
    </ol>

    @if(Model.Directory.Parent != null)
    {


    

    <ol class="breadcrumb" style="background-color: white;  border-top-width: 0; border-top-left-radius : 0; border-top-right-radius: 0; border-color: black; margin-left: 20px; margin-right:20px; margin-top:-20px">

        @{ 
            var directories = new LinkedList<IDirectory>();

            var currentDirectory = Model.Directory;
            while(currentDirectory != null)
            {
                directories.AddFirst(currentDirectory);
                currentDirectory = currentDirectory.Parent;
            }
            
            
        }

        @foreach (var item in directories)
        {
            <li><a asp-action="Directory"
                       asp-route-groupName="@Model.GroupName"
                       asp-route-folderName="@Model.FolderName"
                       asp-route-id="@Model.SnapshotId"
                       asp-route-path="@item.Path">@item.Name</a></li>

        }
        
    </ol>
            }
</div>


<div class="row">
    
    <table class="table table-hover">

        <tr>
            <th></th>
            <th>Name</th>
            <th>Date modified</th>
            <th>Size</th>
        </tr>

        @if (Model.Directory.Parent != null)
        {
            <tr>
                <td><span class="glyphicon glyphicon-folder-open" aria-hidden="true"></span></td>
                <td><a asp-action="Directory"
                       asp-route-groupName="@Model.GroupName"
                       asp-route-folderName="@Model.FolderName"
                       asp-route-id="@Model.SnapshotId"
                       asp-route-path="@Model.Directory.Parent.Path">..</a></td>
                <td></td>
                <td></td>
            </tr>       

        }


        @foreach(var dir in Model.Directory.Directories)
        {
            <tr>
                <td><span class="glyphicon glyphicon-folder-open" aria-hidden="true"></span></td>
                <td><a asp-action="Directory"
                       asp-route-groupName="@Model.GroupName"
                       asp-route-folderName="@Model.FolderName"
                       asp-route-id="@Model.SnapshotId"
                       asp-route-path="@dir.Path">@dir.Name</a>
                </td>
                <td></td>
                <td></td>
            </tr>
        }
        @foreach (var file in Model.Directory.Files)
        {
            <tr>
                <td><span class="glyphicon glyphicon-file" aria-hidden="true"></span></td>
                <td>@file.Name</td>
                <td>@file.LastWriteTime</td>
                <td>@ByteSize.FromBytes(file.Length).ToString()</td>
            </tr>
        }
    </table>



</div>
